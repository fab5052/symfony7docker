
services:

  server:
        build:
            context: .
            dockerfile: ./automation/docker/Dockerfile
        container_name: server
        volumes:
            - ./:/var/www/html
        links:
            - database
        ports:
            - 81:80 
        environment:    
            DATABASE_URL: "database://${MYSQL_USER:- user}:${MYSQL_PASSWORD:- pwd}@database:3306/${MYSQL_DATABASE:- app}"

###> doctrine/doctrine-bundle ###
  database:
    image: mysql:${MYSQL_VERSION:-8}-oracle
    environment:
        MYSQL_DATABASE: ${MYSQL_DATABASE:- green-village}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD:- Afpa1234}
        MYSQL_USER: ${MYSQL_USER:- admin}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:- toor}
    # healthcheck:
    #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #     timeout: 5s
    #     retries: 5
    #     start_period: 60s
    volumes:
        - database_data:/var/lib/mysql:rw
    ports:
        - "${DB_PORT:-3307}:3306" 
  
  phpmyadmin:
          image: phpmyadmin:apache
          container_name: phpmyadmin
          environment:
               PMA_HOST: ${PMA_HOST:- mysql}
               PMA_USER: ${PMA_USER:- !change!}
               PMA_PASSWORD: ${PMA_PASSWORD:- !pwd!}
#               MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:- toor}
          links:
              - database
          ports:
              - 8090:80
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
